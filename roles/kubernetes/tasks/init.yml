---
- name: Create kubernetes cluster config file
  template:
    src: cluster.conf.j2
    dest: /tmp/kubeadm-config.yml

- name: Initialize the cluster
  shell: kubeadm init --config /tmp/kubeadm-config.yml --upload-certs
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init_result

- debug:
    var: kubeadm_result.stdout_lines

- name: Get the certificate key from the init output
  set_fact:
    cert_key: "{{ init_output.stdout | regex_search('certificate key: (.*)', '\\1') }}"

- name: Get the token for joining the nodes
  shell: kubeadm token create --print-join-command
  register: kubernetes_join_command

- debug:
    var: kubernetes_join_command

- name: Extract token and hash from join command
  set_fact:
    token: "{{ kubernetes_join_command.stdout | regex_search('--token ([^ ]+)', '\\1') }}"
    ca_cert_hash: "{{ kubernetes_join_command.stdout | regex_search('--discovery-token-ca-cert-hash ([^ ]+)', '\\1') }}"

- name: Save join information to a file
  copy:
    content: |
      token: {{ token }}
      ca_cert_hash: {{ ca_cert_hash }}
      cert_key: {{ cert_key }}
    dest: /tmp/join_info.yaml

- name: Create a directory for kubeconfig (root user)
  file:
    state: directory
    path: /root/.kube/
    mode: 0775

- name: Setup kubeconfig for root user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    mode: 0644
    owner: root
    group: root

- name: Create a directory for kubeconfig (non-root user)
  file:
    state: directory
    path: /home/{{ ansible_user_id }}/.kube/
    mode: 0775
  when: ansible_user_id != 'root'

- name: Setup kubeconfig for root user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user_id }}/.kube/config
    mode: 0644
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"

- name: Setup calico for kubernetes networking
  shell: kubectl apply -f https://docs.projectcalico.org/v3.17/manifests/calico.yaml